continuous: '{{$.common.purpose.ci.continuous}}'
learnMore: Learn more about Continuous Integration
prSymbol: '#'
moreCommitsLabel: 'More commits'
ciTrialHomePage:
  startTrial:
    description: '{{ $.ci.dashboard.subHeading }}'
    startBtn:
      description: Start 14 day CI Enterprise trial
dashboard:
  subHeading: Take your software build processes to the next level using our Harness Continuous Integration
  createProject: '{{$.createProject}}'
commitsOn: 'Commits on'
committed: 'committed'
clipboardCopySuccess: '{{ $.clipboardCopySuccess }}'
clipboardCopyFail: '{{ $.clipboardCopyFail }}'
infraLabel: '{{ $.infrastructureText }}'
executionLabel: '{{ $.executionText }}'
advancedLabel: '{{ $.advancedTitle }}'
previous: '{{ $.previous }}'
next: '{{ $.next }}'
save: '{{ $.save }}'
titleResources: '{{ $.resourcePage.title }}'
newConnectorButton: '{{ $.newConnector }}'
connectors: '{{ $.connectorsLabel }}'
secrets: '{{ $.common.secrets }}'
delegates: '{{ $.delegate.delegates }}'
templates: '{{ $.common.templates }}'
fileStore: '{{ $.resourcePage.fileStore }}'
titleSettings: 'GENERAL SETTINGS'
titleGovernance: 'GOVERNANCE'
newItem: '+ new item'
noData: 'No data found. Click the button below to create a new item.'
welcome: 'Welcome to Continuous Integration'
description: Build, test and push artifacts to repositories.
createPipeline: '{{ $.common.createPipeline }}'
privileged: Privileged
annotations: Annotations
labels: '{{ $.pipelineSteps.labelsLabel }}'
optimize: Optimize
remoteCacheImage:
  label: Remote Cache Image
  dockerInfo: The remote cache repository needs to be created in the same account and organization as the build image. The repository must already exist for caching to work
remoteCacheRepository:
  label: Remote Cache Repository
runTestsMavenSetupTitle: Maven setup
runTestsMavenSetupText1: Does your pom.xml contain <argLine>?
runTestsMavenSetupText2: Update pom.xml by adding HARNESS_JAVA_AGENT env variable
runTestsMavenSetupSample: |
  Sample:
  <argLine> existing ${env.HARNESS_JAVA_AGENT} </argLine>
commitMessage: Commit Message
prTitle: PR Title
gradleNotesTitle: 'The following needs to be added to a build.gradle to make it compatible with test intelligence:'
gradleNote1: |
  // This adds HARNESS_JAVA_AGENT to the testing command if it's
  // provided through the command line.
  // Local builds will still remain same as it only adds if the
  // parameter is provided.
  tasks.withType(Test) {
    if(System.getProperty("HARNESS_JAVA_AGENT")) {
      jvmArgs += [System.getProperty("HARNESS_JAVA_AGENT")]
    }
  }

  // This makes sure that any test tasks for subprojects don't
  // fail in case the test filter does not match.
  gradle.projectsEvaluated {
          tasks.withType(Test) {
              filter {
                  setFailOnNoMatchingTests(false)
              }
          }
  }
gradleNote2: Test intelligence assumes ./gradlew is present in the root of the project. If not, it falls back to the gradle tool to run the tests. As long as the gradle version has test filtering support, it will be able to run test intelligence
testSummary: Test Summary
successful: Successful
commitsTab:
  youHaveNoCommits: You have no commits
  youWillSeeYourCommitsHere: You will see your commits here
artifactoryConnectorLabel: Artifactory Connector
buildInfa:
  label: Build Infrastructure is required
  awsVMs: AWS VMs
  selectInfra: Select the infrastructure where you want your builds to run
  infrastructureTypesLabel: Infrastructure Types
  kubernetesHelpText: Use to run your builds on a Kubernetes Cluster, where each CI stage runs on an ephemeral Kubernetes pod.
  awsHelpText: Use to run your builds on VMs with Windows or Linux based operating systems.
  useNewInfra: Use a New Infrastructure
  k8sLabel: Kubernetes (K8s)
  vmLabel: Virtual Machines (VMs)
  awsVM:
    os: Operating System
    architecture: Achitecture
    isRequiredWhen: '{{field1}} is required in case {{field2}} is provided'
preCommandLabel: Pre-Command
postCommandLabel: Post-Command
